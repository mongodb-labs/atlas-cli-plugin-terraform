# Based on https://github.com/mongodb/terraform-provider-mongodbatlas/blob/master/examples/migrate_cluster_to_advanced_cluster/module_maintainer/v1/main.tf
resource "mongodbatlas_advanced_cluster" "this" {
  lifecycle {
    precondition {
      condition     = !(var.auto_scaling_disk_gb_enabled && var.disk_size > 0)
      error_message = "Must use either auto_scaling_disk_gb_enabled or disk_size, not both."
    }
  }

  project_id             = var.project_id
  name                   = var.cluster_name
  cluster_type           = var.cluster_type
  mongo_db_major_version = var.mongo_db_major_version


  replication_specs = flatten([
    for spec in var.replication_specs : [
      for i in range(spec.num_shards) : {
        zone_name = spec.zone_name
        region_configs = flatten([
          # Regions must be sorted by priority in descending order.
          for priority in range(7, 0, -1) : [
            for region in spec.regions_config : {
              provider_name = var.provider_name
              region_name   = region.region_name
              priority      = region.priority
              electable_specs = region.electable_nodes == 0 ? null : {
                node_count    = region.electable_nodes
                instance_size = var.instance_size
                disk_size_gb  = var.disk_size
              }
              read_only_specs = region.read_only_nodes == 0 ? null : {
                node_count    = region.read_only_nodes
                instance_size = var.instance_size
                disk_size_gb  = var.disk_size
              }
              auto_scaling = {
                disk_gb_enabled = var.auto_scaling_disk_gb_enabled
              }
            } if priority == region.priority
          ]
        ])
      }
    ]
  ])
  tags = var.tags

  # Generated by atlas-cli-plugin-terraform.
  # Please review the changes and confirm that references to this resource are updated.
}

# example of variable for demostration purposes, not used in the conversion
variable "replication_specs" {
  description = "List of replication specifications in mongodbatlas_cluster format"
  type = list(object({
    num_shards = number
    zone_name  = string
    regions_config = list(object({
      region_name     = string
      electable_nodes = number
      priority        = number
      read_only_nodes = optional(number, 0)
    }))
  }))
  default = [
    {
      num_shards = 1
      zone_name  = "Zone 1"
      regions_config = [
        {
          region_name     = "US_EAST_1"
          electable_nodes = 3
          priority        = 7
        }
      ]
      }, {
      num_shards = 2
      zone_name  = "Zone 2"
      regions_config = [
        {
          region_name     = "US_WEST_2"
          electable_nodes = 2
          priority        = 6
          read_only_nodes = 1
          }, {
          region_name     = "EU_WEST_1"
          electable_nodes = 3
          priority        = 7
        }
      ]
    }
  ]
}
